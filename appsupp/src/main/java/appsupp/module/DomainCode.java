package appsupp.module;

// Generated Aug 19, 2010 5:16:14 PM by Hibernate Tools 3.2.1.GA

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * DomainCode generated by hbm2java
 */
@Entity
@Table(name = "DOMAIN_CODE", schema = "CHIEF_DOM", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "DOMAIN_NAME_ID", "DESCRIPTION" }),
		@UniqueConstraint(columnNames = { "DOMAIN_NAME_ID", "CODE" }) })
public class DomainCode implements java.io.Serializable {

	private static final long serialVersionUID = -8445222546881012434L;
	private BigDecimal domainCodeId;
	private String code;
	private String description;
	private Timestamp effectiveDate;
	private Timestamp terminationDate;
	private String createUserid;
	private Timestamp createTimestamp;
	private String updateUserid;
	private Timestamp updateTimestamp;
	private DomainName domainName;

	public DomainCode() {
	}

	public DomainCode(int id, String code, String description) {
		this.domainCodeId = BigDecimal.valueOf(id);
		this.code = code;
		this.description = description;
		if (domainCodeId == null) // TODO: remove this once we have domainCodes in db 
			this.domainCodeId = BigDecimal.valueOf(0);
	}

	@Id
	@Column(name = "DOMAIN_CODE_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getDomainCodeId() {
		return this.domainCodeId;
	}

	public void setDomainCodeId(BigDecimal domainCodeId) {
		this.domainCodeId = domainCodeId;
	}

	@Column(name = "CODE", nullable = false, length = 10)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "DESCRIPTION", nullable = false, length = 40)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EFFECTIVE_DATE", length = 7)
	public Timestamp getEffectiveDate() {
		return this.effectiveDate;
	}

	public void setEffectiveDate(Timestamp effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TERMINATION_DATE", length = 7)
	public Timestamp getTerminationDate() {
		return this.terminationDate;
	}

	public void setTerminationDate(Timestamp terminationDate) {
		this.terminationDate = terminationDate;
	}

	@Column(name = "CREATE_USERID", nullable = false, length = 30)
	public String getCreateUserid() {
		return this.createUserid;
	}

	public void setCreateUserid(String createUserid) {
		this.createUserid = createUserid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIMESTAMP", nullable = false, length = 7)
	public Timestamp getCreateTimestamp() {
		return this.createTimestamp;
	}

	public void setCreateTimestamp(Timestamp createTimestamp) {
		this.createTimestamp = createTimestamp;
	}

	@Column(name = "UPDATE_USERID", length = 30)
	public String getUpdateUserid() {
		return this.updateUserid;
	}

	public void setUpdateUserid(String updateUserid) {
		this.updateUserid = updateUserid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIMESTAMP", length = 7)
	public Timestamp getUpdateTimestamp() {
		return this.updateTimestamp;
	}

	public void setUpdateTimestamp(Timestamp updateTimestamp) {
		this.updateTimestamp = updateTimestamp;
	}

	@Column(name = "DOMAIN_NAME_ID", nullable = false, precision = 22, scale = 0)
	public DomainName getDomainName() {
		return domainName;
	}

	public void setDomainName(DomainName domainName) {
		this.domainName = domainName;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((getDomainCodeId() == null) ? 0 : getDomainCodeId()
						.hashCode());
		return result;
	}

	// This must return true for another domain code object with same id.
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof DomainCode))
			return false;
		DomainCode other = (DomainCode) obj;
		if (this.getDomainCodeId() == null) {
			if (other.getDomainCodeId() != null)
				return false;
		} else if (!getDomainCodeId().equals(other.getDomainCodeId()))
			return false;
		return true;
	}
}
